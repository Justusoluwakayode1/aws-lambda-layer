name: Deploy Lambda + Layer

on:
  push:
    branches:
      - main 
    paths:
      - 'layers/**'
      - 'lambda_functions/**'
      - '.github/workflows/deploy.yaml'
      - 'aws-lambda-layer/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Zip Lambda Layer
        run: |
          mkdir -p python/my_utils
          cp -r layers/my_utils/*.py python/my_utils/
          zip -r my_utils.zip python
          mv my_utils.zip layers/
          rm -rf python  # clean up temp folder



      - name: Check Lambda Layer ZIP Exists
        run: |
          ls -lh layers/
          test -f layers/my_utils.zip && echo "✅ Layer ZIP exists" || (echo "❌ Layer ZIP missing" && exit 1)

          

      - name: Debug: List contents of my_utils.zip
        run: unzip -l layers/my_utils.zip

    

      - name: Zip Lambda Function
        run: |
          cd lambda_functions
          zip -r lambda_function.zip .

      - name: Check Lambda Function Zip Exists
        run: |
          ls -lh lambda_functions/
          test -f lambda_functions/lambda_function.zip && echo "✅ Lambda ZIP exists" || (echo "❌ Lambda ZIP missing" && exit 1 )

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: .
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: terraform init

      - name: Terraform Plan
        working-directory: .
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        working-directory: .
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: terraform apply -auto-approve tfplan



